---
import BookListCell from "../../components/BookListCell.astro";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

type BookType = {
    data: {
        title: string,
        dateRead: Date;

        // ... other book properties
    };
    slug: string;
    // ... other book properties
};

const books: BookType[] = await getCollection("books");

function getYear(date: Date) {
    return date.getFullYear();
}

interface GroupedBooks {
    [key: string]: BookType[];
}


// Grouping books by year
const groupedBooks: GroupedBooks = books.reduce((acc: GroupedBooks, book: BookType) => {
    const year: string = getYear(book.data.dateRead).toString();
    if (!acc[year]) {
        acc[year] = [];
    }
    acc[year].push(book);
    return acc;
}, {});

// Sorting the years for display
const years: string[] = Object.keys(groupedBooks).sort((a, b) => parseInt(b) - parseInt(a));

---

<Layout title="Books">
    <div>
        {years.map((year) => (
            <div>
                <h3>{year}</h3> <!-- Year headline -->
                <div class="grid-container">
                    {groupedBooks[year].map((book) => (
                        <BookListCell slug={book.slug} />
                    ))}
                </div>
            </div>
        ))}
    </div>
</Layout>

<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Creates a 3-column grid */
        grid-gap: 10px; /* Optional: adds some space between grid items */
        margin-bottom: 3rem;
    }

    h3 {
        color: var(--tx-3);
        margin-bottom: 1.2rem; 
    }
</style>