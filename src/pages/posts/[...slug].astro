---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import TagsList from '../../components/TagsList.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  return posts.map(post => {
    // Print each entry's slug to the console
    // console.log(entry.data.title);

    return {
      params: { slug: post.slug }, 
      props: { post },
    };
  });
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={ post.data.title }>
  <article>
    <Content />
    <div class="timestamp-and-tags">
      <span class="timestamp">{post.data.timestamp.toDateString()}</span>
      <TagsList tags={post.data.tags} />
    </div>
  </article>
</Layout>


<style is:global>

  .footnotes::before {
      content: ''; /* Required to generate the box */
      display: block; /* Makes it a block element */
      width: 150px; /* Width of the horizontal line */
      height: 1px; /* Height of the line */
      background-color: var(--bg-3); /* Color of the line */
      margin: 0rem 0rem 1rem 0rem; /* Center the line and add space below */
  }

  #footnote-label {
    display: none;
   }

   .footnotes ol li {
      font-size: 0.9rem;
      color: var(--tx-2);
   }
</style>

<style>
  #content :global(h2) + :global(p) {
    margin-top: 20px;
  }
  
  .footnotes {
    display: none !important;
    background-color: red !important;
  }

  .timestamp-and-tags {
    margin-top: 3rem;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 0.2rem;
    align-content: flex-start;
    align-items: flex-start;
  }

  .timestamp {
    font-size: 0.8rem;
    padding: 2px 8px;
    color: var(--tx-2);
    background-color: var(--bg-2);
    border-radius: 30px;
    white-space: nowrap;
  }


</style>